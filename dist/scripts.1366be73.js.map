{"version":3,"sources":["src/plugins/select.js","src/scripts/index.js"],"names":["getTemplate","data","placeholder","text","items","map","item","id","value","join","Select","selector","options","$el","document","querySelector","selectedId","e","type","target","dataset","toggle","select","close","classList","contains","isOpen","open","find","$value","textContent","current","querySelectorAll","forEach","element","remove","add","onSelect","$arrow","removeEventListener","clickHandler","innerHTML","bind","addEventListener","console","log","window","s"],"mappings":"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","file":"scripts.1366be73.js","sourceRoot":"..","sourcesContent":["const getTemplate = (data = [], placeholder) => {\r\n    const text = placeholder ?? 'Текст по умолчанию'\r\n    const items = data.map(item => {\r\n        return `\r\n            <li class=\"select__item\" data-type=\"item\"  data-id=\"${item.id}\">${item.value}</li>\r\n        `\r\n    })\r\n\r\n    return `\r\n        <div class=\"select__backdrop\" data-type=\"backdrop\"></div>\r\n            <div class=\"select__input\" data-type=\"input\">\r\n                <span data-type=\"value\">\r\n                    ${text}\r\n                    <i class=\"fa-solid fa-angles-down\" data-type=\"arrow\"></i>\r\n                </span>\r\n            </div>\r\n            <div class=\"select__dropdown\">\r\n                <ul class=\"select__list\">\r\n                ${items.join('')}\r\n                </ul>\r\n            </div>\r\n    `\r\n}\r\n\r\nexport class Select{\r\n    constructor(selector,options){\r\n        this.$el = document.querySelector(selector)\r\n        this.options = options\r\n        this.selectedId = null\r\n\r\n        this.#render()\r\n        this.#setup()\r\n    }\r\n\r\n    #render(){\r\n        const {placeholder, data} = this.options\r\n        this.$el.classList.add('select')\r\n        this.$el.innerHTML = getTemplate(data, placeholder)\r\n    }\r\n\r\n    #setup(){\r\n        this.clickHandler = this.clickHandler.bind(this)\r\n        this.$el.addEventListener('click', this.clickHandler)\r\n        this.$arrow = this.$el.querySelector('[data-type=\"arrow\"]')\r\n        this.$value = this.$el.querySelector('[data-type=\"value\"]')\r\n    }\r\n\r\n    clickHandler(e){\r\n        const {type} = e.target.dataset\r\n\r\n        if(type === 'input'){\r\n            this.toggle()\r\n        } else if (type === 'item'){\r\n            const id = e.target.dataset.id\r\n            this.select(id)\r\n        } else if(type === 'backdrop'){\r\n            this.close()\r\n        }\r\n    }\r\n\r\n    get isOpen(){\r\n        return this.$el.classList.contains('open')\r\n    }\r\n\r\n    toggle(){\r\n        this.isOpen ? this.close() : this.open()\r\n    }\r\n\r\n    get current(){\r\n        return this.options.data.find(item => item.id === this.selectedId)\r\n    }\r\n\r\n    select(id){\r\n        this.selectedId = id\r\n        this.$value.textContent = this.current.value\r\n\r\n        this.$el.querySelectorAll('[data-type=\"item\"]').forEach(element => {\r\n            element.classList.remove('selected')\r\n        })\r\n        this.$el.querySelector(`[data-id=\"${id}\"]`).classList.add('selected')\r\n\r\n        this.options.onSelect ? this.options.onSelect(this.current) : null\r\n        \r\n        this.close()\r\n    }\r\n\r\n    open(){\r\n        this.$el.classList.add('open')\r\n        this.$arrow.classList.remove('fa-angles-down')\r\n        this.$arrow.classList.add('fa-angles-up')\r\n    }\r\n\r\n    close(){\r\n        this.$el.classList.remove('open')\r\n        this.$arrow.classList.add('fa-angles-down')\r\n        this.$arrow.classList.remove('fa-angles-up')\r\n    }\r\n\r\n    destroy(){\r\n        this.$el.removeEventListener('click',this.clickHandler)\r\n        this.$el.innerHTML = ''\r\n    }\r\n}","import { Select } from \"/src/plugins/select.js\"\r\n\r\nconst select = new Select('#select',{\r\n    placeholder: 'Выбери элемент',\r\n    data : [\r\n        {id: '1', value: '1'},\r\n        {id: '2', value: '2'},\r\n        {id: '3', value: '3'},\r\n        {id: '4', value: '4'},\r\n        {id: '5', value: '5'},\r\n        {id: '6', value: '6'},\r\n        {id: '7', value: '7'}\r\n    ],\r\n    onSelect(item){\r\n        console.log('Selected item', item)\r\n    }\r\n})\r\n\r\nwindow.s = select"]}